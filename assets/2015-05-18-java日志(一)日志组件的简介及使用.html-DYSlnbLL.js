import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as l,d as n}from"./app-z78npDRU.js";const e={},o=n(`<p>java中的日志组件太多了，经常听到的有<code>log4j, slf4j, logbak</code>等，不太熟悉的有<code>common-logging, JUL, JCL</code>等， 刚开始接触的时候感觉很晕，不知道这些都是干嘛的，甚至不理解为啥都是记日志的，为什么要整出这么多不同的东西来。后来从头到尾梳理了一遍，才稍微有点清晰。</p><h2 id="日志都做什么" tabindex="-1"><a class="header-anchor" href="#日志都做什么"><span>日志都做什么</span></a></h2><p>平时写代码想看看输出结果的时候一般直接用<code>System.out</code>来输出了，感觉也挺好用的，为什么还要有专门的组件记录日志？ 下面给出了几条日志组件应该具有的功能:</p><ol><li>能够在不同阶段输出不同级别的信息</li><li>日志不能影响正常的程序效率</li><li>日志挂了不能影响到正常业务</li><li>还有好多</li></ol><h2 id="各个日志组件的介绍" tabindex="-1"><a class="header-anchor" href="#各个日志组件的介绍"><span>各个日志组件的介绍</span></a></h2><p>日志框架(实现): JUL、 Log4j、 LogBack<br> 日志门面(接口): JCL(common-logging)、 SLF4J</p><h3 id="jul" tabindex="-1"><a class="header-anchor" href="#jul"><span>JUL</span></a></h3><p>JUL即<code>Java Util Logging</code>, 是JVM提供的日志组件，在<code>rt.jar</code>的<code>java.util.logging</code>包里</p><h3 id="common-logging" tabindex="-1"><a class="header-anchor" href="#common-logging"><span>common-logging</span></a></h3><p><code>common-logging</code>即<code>Apache Commons Logging</code>,之前叫<code>Jakarta Commons Logging, JCL</code>，是apache提供的一个通用的日志接口。 内部有个<code>Simple logger</code>的简单实现，但很弱，一般配合log4j等第三方实现使用。</p><h3 id="slf4j" tabindex="-1"><a class="header-anchor" href="#slf4j"><span>slf4j</span></a></h3><p><code>slf4j</code>即<code>Simple Logging Facade for JAVA</code>，java简单日志门面。类似于<code>Apache Common-Logging</code>，也是一个日志接口。 SLF4J一般配合第三方实现通过slf4j的桥接包来使用。</p><h3 id="log4j" tabindex="-1"><a class="header-anchor" href="#log4j"><span>Log4j</span></a></h3><p>Apache的一个开放源代码项目，日志的实现，比较好用，得到了广泛使用。<br> Log4j有两个版本，一个是log4j1，它使用properties文件进行配置；<br> 另一个是log4j2，跟log4j1不兼容，它使用xml文件进行配置；Log4j2包括两个部分： <code>log4j-api</code>日志接口，<code>log4j-core</code>日志实现。它这么分，有点也想作为日志门面的意思。</p><h3 id="logback" tabindex="-1"><a class="header-anchor" href="#logback"><span>LogBack</span></a></h3><p>Logback是由log4j创始人设计的又一个开源日志组件。<br> 分为三个模块：<code>logback-core,logback-classic</code>和<code>logback-access</code>。<br><code>logback-core</code>是其它两个模块的基础模块。<code>logback-classic</code>是log4j的一个改良版本，并且完整实现了<code>SLF4J API</code>。<br><code>logback-access</code>访问模块与Servlet容器集成提供通过Http来访问日记的功能。</p><h2 id="为什么有这么多不同日志组件" tabindex="-1"><a class="header-anchor" href="#为什么有这么多不同日志组件"><span>为什么有这么多不同日志组件</span></a></h2><p>反正有很多，各有各的用法。JDK里的JUL好像不太好用，后来Log4j得到了广泛应用。 日志组件越来越多，如果一个应用程序中有两个组件，而这两个组件恰好用了不同的日志工具，那这个应用不就有两个日志输出了。<br> 这时候出现了<code>Apache Commons Logging(JCL)</code>，它只提供log接口，具体的实现则是在<strong>运行时动态查找</strong>。只要遵守JCL借口的日志工具，都可以通过JCL来使用。<br> JCL是在运行时动态查找具体的日志实现，当项目很大时，JCL的动态绑定并不是总能成功，解决办法是在项目部署时提前指定绑定哪个日志工具，这就出现了SLF4J。</p><h2 id="各日志组件的用法" tabindex="-1"><a class="header-anchor" href="#各日志组件的用法"><span>各日志组件的用法</span></a></h2><p>常用的日志组件有 <code>JUL, Log4j(Log4j1、 Log4j2), Logback</code>，下面是他们的用法</p><h3 id="jul-1" tabindex="-1"><a class="header-anchor" href="#jul-1"><span>JUL</span></a></h3><p>依赖jdk，无需额外jar包<br> 代码示例:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> java.util.logging.Logger;</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#F97583;"> class</span><span style="color:#B392F0;"> LogTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    private</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> final</span><span style="color:#E1E4E8;"> Logger LOGGER </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Logger.</span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">(LogTest.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">    public</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> void</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        LOGGER.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(LOGGER.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span>五月 23, 2015 4:49:11 下午 com.test.log.LogTest main</span></span>
<span class="line"><span>信息: java.util.logging.Logger</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="log4j1" tabindex="-1"><a class="header-anchor" href="#log4j1"><span>Log4j1</span></a></h3><p>需要<code>log4j</code>版本<code>1.2.**</code>的<code>jar</code>包<br> 需要properties配置文件(名为<code>log4j.properties</code>放在classpath下)； 无配置文件无法输出日志。<br> jar包的maven依赖:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;log4j&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;log4j&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.2.14&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>log4j.properties</code>配置文件:</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">log4j.rootLogger</span><span style="color:#E1E4E8;"> = debug, console</span></span>
<span class="line"><span style="color:#F97583;">log4j.appender.console</span><span style="color:#E1E4E8;"> = org.apache.log4j.ConsoleAppender</span></span>
<span class="line"><span style="color:#F97583;">log4j.appender.console.layout</span><span style="color:#E1E4E8;"> = org.apache.log4j.PatternLayout</span></span>
<span class="line"><span style="color:#F97583;">log4j.appender.console.layout.ConversionPattern</span><span style="color:#E1E4E8;"> = %-d{yyyy-MM-dd HH:mm:ss} %m%n</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码示例:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.apache.log4j.Logger; </span><span style="color:#6A737D;">// 引入的是类</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#F97583;"> class</span><span style="color:#B392F0;"> LogTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    private</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> final</span><span style="color:#E1E4E8;"> Logger LOGGER </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Logger.</span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">(LogTest.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">    public</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> void</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        LOGGER.</span><span style="color:#B392F0;">debug</span><span style="color:#E1E4E8;">(LOGGER.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span>2015-05-23 17:44:07 org.apache.log4j.Logger</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="log4j2" tabindex="-1"><a class="header-anchor" href="#log4j2"><span>Log4j2</span></a></h3><p>Log4j2需要<code>log4j-api、log4j-core</code>版本<code>2.*</code>的<code>jar</code>包<br> 需要xml配置文件(名为<code>log4j2.xml</code>放在classpath下)； 不支持properties文件； 无配置文件无法输出日志。<br> jar包的maven依赖:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.apache.logging.log4j&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;log4j-api&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;2.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.apache.logging.log4j&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;log4j-core&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;2.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>log4j2.xml</code>配置文件:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#B392F0;"> encoding</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">Configuration</span><span style="color:#B392F0;"> status</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;WARN&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">Appenders</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">Console</span><span style="color:#B392F0;"> name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Console&quot;</span><span style="color:#B392F0;"> target</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SYSTEM_OUT&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">PatternLayout</span><span style="color:#B392F0;"> pattern</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">Console</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">Appenders</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">Loggers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">Root</span><span style="color:#B392F0;"> level</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;debug&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">AppenderRef</span><span style="color:#B392F0;"> ref</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Console&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">Root</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">Loggers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">Configuration</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码示例:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.apache.logging.log4j.LogManager;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.apache.logging.log4j.Logger;  </span><span style="color:#6A737D;">// 引入的是接口</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#F97583;"> class</span><span style="color:#B392F0;"> LogTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    private</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> final</span><span style="color:#E1E4E8;"> Logger LOGGER </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LogManager.</span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">(LogTest.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">    public</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> void</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        LOGGER.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(LOGGER.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span>18:00:35.409 [main] INFO  com.test.log.LogTest - org.apache.logging.log4j.core.Logger</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="logback-1" tabindex="-1"><a class="header-anchor" href="#logback-1"><span>LogBack</span></a></h3><p>Logback需要<code>logback-core、logback-classic[、slf4j-api]</code>的<code>jar</code>包(<code>logback-classic</code>实现了<code>slf4j-api</code>)<br> 配置文件:</p><ol><li>在<code>classpath</code>中寻找<code>logback.groovy</code></li><li>若无，则在<code>classpath</code>中寻找<code>logback-test.xml</code></li><li>若无，则在<code>classpath</code>中寻找<code>logback.xml</code></li><li>若无，则使用<code>JVM</code>的<code>ServiceLoader</code>实现<code>com.qos.logback.classic.spi.Configurator</code></li><li>以上都没成功，则<code>logbak</code>使用自己的<code>BasicConfigurator</code>配置，将日志输出到控制台</li></ol><p>jar包的maven依赖:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;ch.qos.logback&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;logback-core&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.1.3&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;ch.qos.logback&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;logback-classic&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.1.3&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>logback.xml</code>配置文件:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#B392F0;"> encoding</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;UTF-8&quot;</span><span style="color:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">appender</span><span style="color:#B392F0;"> name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SYSTEM_OUT&quot;</span><span style="color:#B392F0;"> class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">encoder</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">pattern</span><span style="color:#E1E4E8;">&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&lt;/</span><span style="color:#85E89D;">pattern</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">encoder</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">appender</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">root</span><span style="color:#B392F0;"> level</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;DEBUG&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">appender-ref</span><span style="color:#B392F0;"> ref</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;SYSTEM_OUT&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">root</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码示例:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.slf4j.Logger;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.slf4j.LoggerFactory;</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#F97583;"> class</span><span style="color:#B392F0;"> LogTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    private</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> final</span><span style="color:#E1E4E8;"> Logger LOGGER </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LoggerFactory.</span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">(LogTest.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">    public</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> void</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        LOGGER.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(LOGGER.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span>18:00:35.409 [main] INFO  com.test.log.LogTest - ch.qos.logback.classic.Logger</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="jcl-common-logging" tabindex="-1"><a class="header-anchor" href="#jcl-common-logging"><span>JCL(common-logging)</span></a></h3><p>JCL需要<code>commons-logging</code>的<code>jar</code>包<br> 本文只演示使用方法，对输出结果暂不解释，后面的文章会解释原理</p><p>jar包的maven依赖:</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;commons-logging&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;commons-logging&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码示例:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.apache.commons.logging.Log;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.apache.commons.logging.LogFactory;</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#F97583;"> class</span><span style="color:#B392F0;"> LogTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">    private</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> final</span><span style="color:#E1E4E8;"> Log logger </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LogFactory.</span><span style="color:#B392F0;">getLog</span><span style="color:#E1E4E8;">(LogTest.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">    public</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> void</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        logger.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(logger.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果输出:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span>五月 23, 2015 7:19:09 下午 com.test.log.LogTest main</span></span>
<span class="line"><span>信息: org.apache.commons.logging.impl.Jdk14Logger</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slf4j-1" tabindex="-1"><a class="header-anchor" href="#slf4j-1"><span>slf4j</span></a></h3><p>slf4j只有接口没有实现，必须结合其他日志的实现一起使用</p>`,64),p=[o];function c(t,r){return a(),l("div",null,p)}const d=s(e,[["render",c],["__file","2015-05-18-java日志(一)日志组件的简介及使用.html.vue"]]),g=JSON.parse('{"path":"/program/spring/2015-05-18-java%E6%97%A5%E5%BF%97(%E4%B8%80)%E6%97%A5%E5%BF%97%E7%BB%84%E4%BB%B6%E7%9A%84%E7%AE%80%E4%BB%8B%E5%8F%8A%E4%BD%BF%E7%94%A8.html","title":"java日志(一):日志组件简介及使用","lang":"zh-CN","frontmatter":{"title":"java日志(一):日志组件简介及使用","date":"2015-05-18T00:00:00.000Z","category":"Java","tag":["Log"],"order":-20150518,"description":"java中的日志组件太多了，经常听到的有log4j, slf4j, logbak等，不太熟悉的有common-logging, JUL, JCL等， 刚开始接触的时候感觉很晕，不知道这些都是干嘛的，甚至不理解为啥都是记日志的，为什么要整出这么多不同的东西来。后来从头到尾梳理了一遍，才稍微有点清晰。 日志都做什么 平时写代码想看看输出结果的时候一般直接用...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/program/spring/2015-05-18-java%E6%97%A5%E5%BF%97(%E4%B8%80)%E6%97%A5%E5%BF%97%E7%BB%84%E4%BB%B6%E7%9A%84%E7%AE%80%E4%BB%8B%E5%8F%8A%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"魔芋丝丝"}],["meta",{"property":"og:title","content":"java日志(一):日志组件简介及使用"}],["meta",{"property":"og:description","content":"java中的日志组件太多了，经常听到的有log4j, slf4j, logbak等，不太熟悉的有common-logging, JUL, JCL等， 刚开始接触的时候感觉很晕，不知道这些都是干嘛的，甚至不理解为啥都是记日志的，为什么要整出这么多不同的东西来。后来从头到尾梳理了一遍，才稍微有点清晰。 日志都做什么 平时写代码想看看输出结果的时候一般直接用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-09T09:40:25.000Z"}],["meta",{"property":"article:author","content":"moyusisi"}],["meta",{"property":"article:tag","content":"Log"}],["meta",{"property":"article:published_time","content":"2015-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-09T09:40:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"java日志(一):日志组件简介及使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2015-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-09T09:40:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"moyusisi\\"}]}"]]},"headers":[{"level":2,"title":"日志都做什么","slug":"日志都做什么","link":"#日志都做什么","children":[]},{"level":2,"title":"各个日志组件的介绍","slug":"各个日志组件的介绍","link":"#各个日志组件的介绍","children":[{"level":3,"title":"JUL","slug":"jul","link":"#jul","children":[]},{"level":3,"title":"common-logging","slug":"common-logging","link":"#common-logging","children":[]},{"level":3,"title":"slf4j","slug":"slf4j","link":"#slf4j","children":[]},{"level":3,"title":"Log4j","slug":"log4j","link":"#log4j","children":[]},{"level":3,"title":"LogBack","slug":"logback","link":"#logback","children":[]}]},{"level":2,"title":"为什么有这么多不同日志组件","slug":"为什么有这么多不同日志组件","link":"#为什么有这么多不同日志组件","children":[]},{"level":2,"title":"各日志组件的用法","slug":"各日志组件的用法","link":"#各日志组件的用法","children":[{"level":3,"title":"JUL","slug":"jul-1","link":"#jul-1","children":[]},{"level":3,"title":"Log4j1","slug":"log4j1","link":"#log4j1","children":[]},{"level":3,"title":"Log4j2","slug":"log4j2","link":"#log4j2","children":[]},{"level":3,"title":"LogBack","slug":"logback-1","link":"#logback-1","children":[]},{"level":3,"title":"JCL(common-logging)","slug":"jcl-common-logging","link":"#jcl-common-logging","children":[]},{"level":3,"title":"slf4j","slug":"slf4j-1","link":"#slf4j-1","children":[]}]}],"git":{"createdTime":1719153683000,"updatedTime":1725874825000,"contributors":[{"name":"moyusisi","email":"moyusisi@126.com","commits":1}]},"filePathRelative":"program/spring/2015-05-18-java日志(一)日志组件的简介及使用.md","localizedDate":"2015年5月18日","excerpt":"","autoDesc":true}');export{d as comp,g as data};
