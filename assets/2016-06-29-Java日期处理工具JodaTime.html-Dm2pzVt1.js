import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,d as l}from"./app-DQnd5bNn.js";const e={},p=l(`<p>主要是介绍下有这么一个好用的工具包, 简单写几个使用的例子</p><h2 id="maven依赖" tabindex="-1"><a class="header-anchor" href="#maven依赖"><span>maven依赖</span></a></h2><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;joda-time&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;joda-time&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;2.9.4&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h2><p>最常用的一个类就是<code>DateTime</code>类, 它有很多构造方法和时间的操作方法</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#F97583;">    public</span><span style="color:#F97583;"> static</span><span style="color:#F97583;"> void</span><span style="color:#B392F0;"> main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        DateTime dateTime;</span></span>
<span class="line"><span style="color:#6A737D;">        // 创建当前时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTime.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">        // 创建某一时刻的时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> DateTime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2016</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">999</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">        // 通过系统毫秒数创建当前时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> DateTime</span><span style="color:#E1E4E8;">(System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#6A737D;">        // 通过格式化字符串创建时间</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTime.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;2016-06-30 12:01:01&quot;</span><span style="color:#E1E4E8;">, DateTimeFormat.</span><span style="color:#B392F0;">forPattern</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // 与JDK 的 Date 相互转换</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> DateTime</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Date</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        Date jdkDate </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dateTime.</span><span style="color:#B392F0;">toDate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // 默认输出格式</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(dateTime.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">()); </span><span style="color:#6A737D;">// 2016-06-29T15:36:41.591+08:00</span></span>
<span class="line"><span style="color:#6A737D;">        // 格式化输出</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(dateTime.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// 2016-06-06 12:01:01.999</span></span>
<span class="line"><span style="color:#6A737D;">        // 输出星期几</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(dateTime.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;E yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// 星期三 2016-06-29 15:38:47</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // 时间操作, 注意每个返回都是一个新对象</span></span>
<span class="line"><span style="color:#6A737D;">        // 33天后</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> DateTime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2016</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">// 2016-01-01 12:10:10.010</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dateTime.</span><span style="color:#B392F0;">plusDays</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">33</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">// 2016-02-03 12:10:10.010</span></span>
<span class="line"><span style="color:#6A737D;">        // 年月日时分秒 还有毫秒, 都能加</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // 某月最后一天</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> DateTime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2016</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">// 2016-01-01 12:10:10.010</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dateTime.</span><span style="color:#B392F0;">dayOfMonth</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">withMaximumValue</span><span style="color:#E1E4E8;">();  </span><span style="color:#6A737D;">// 2016-01-31 12:10:10.010</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // 某周第一天</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> DateTime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2016</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">// 2016-01-01 12:10:10.010</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dateTime.</span><span style="color:#B392F0;">dayOfWeek</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">withMinimumValue</span><span style="color:#E1E4E8;">();   </span><span style="color:#6A737D;">// 2015-12-28 12:10:10.010</span></span>
<span class="line"><span style="color:#6A737D;">        // 类似的有 yearOfCentury dayOfYear monthOfYear dayOfMonth dayOfWeek</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">        // 距离今天多少天</span></span>
<span class="line"><span style="color:#E1E4E8;">        dateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTime.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;2016-06-30 12:01:01&quot;</span><span style="color:#E1E4E8;">, DateTimeFormat.</span><span style="color:#B392F0;">forPattern</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#F97583;">        int</span><span style="color:#E1E4E8;"> days </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Days.</span><span style="color:#B392F0;">daysBetween</span><span style="color:#E1E4E8;">(dateTime, DateTime.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">getDays</span><span style="color:#E1E4E8;">();  </span><span style="color:#6A737D;">// 后面早则为负数</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实创建<code>DateTime</code>对象时也能传<code>ISODateTimeFormat</code>格式化的字符串, 如:&quot;2006-01-26T13:30:00-06:00&quot;, 但要确保给出的字符串格式正确, 可以参考<a href="http://joda-time.sourceforge.net/api-release/index.html" target="_blank" rel="noopener noreferrer">Joda API文档</a></p>`,7),o=[p];function t(r,c){return a(),n("div",null,o)}const y=s(e,[["render",t],["__file","2016-06-29-Java日期处理工具JodaTime.html.vue"]]),d=JSON.parse('{"path":"/program/java/2016-06-29-Java%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7JodaTime.html","title":"Java日期处理工具JodaTime","lang":"zh-CN","frontmatter":{"title":"Java日期处理工具JodaTime","date":"2016-06-29T00:00:00.000Z","category":"Java","tag":["JodaTime"],"order":-20160629,"description":"主要是介绍下有这么一个好用的工具包, 简单写几个使用的例子 maven依赖 使用示例 最常用的一个类就是DateTime类, 它有很多构造方法和时间的操作方法 其实创建DateTime对象时也能传ISODateTimeFormat格式化的字符串, 如:\\"2006-01-26T13:30:00-06:00\\", 但要确保给出的字符串格式正确, 可以参考Jo...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/program/java/2016-06-29-Java%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7JodaTime.html"}],["meta",{"property":"og:site_name","content":"魔芋丝丝"}],["meta",{"property":"og:title","content":"Java日期处理工具JodaTime"}],["meta",{"property":"og:description","content":"主要是介绍下有这么一个好用的工具包, 简单写几个使用的例子 maven依赖 使用示例 最常用的一个类就是DateTime类, 它有很多构造方法和时间的操作方法 其实创建DateTime对象时也能传ISODateTimeFormat格式化的字符串, 如:\\"2006-01-26T13:30:00-06:00\\", 但要确保给出的字符串格式正确, 可以参考Jo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-09T09:40:25.000Z"}],["meta",{"property":"article:author","content":"moyusisi"}],["meta",{"property":"article:tag","content":"JodaTime"}],["meta",{"property":"article:published_time","content":"2016-06-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-09T09:40:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java日期处理工具JodaTime\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-06-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-09T09:40:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"moyusisi\\"}]}"]]},"headers":[{"level":2,"title":"maven依赖","slug":"maven依赖","link":"#maven依赖","children":[]},{"level":2,"title":"使用示例","slug":"使用示例","link":"#使用示例","children":[]}],"git":{"createdTime":1719158757000,"updatedTime":1725874825000,"contributors":[{"name":"moyusisi","email":"moyusisi@126.com","commits":1}]},"filePathRelative":"program/java/2016-06-29-Java日期处理工具JodaTime.md","localizedDate":"2016年6月29日","excerpt":"","autoDesc":true}');export{y as comp,d as data};
