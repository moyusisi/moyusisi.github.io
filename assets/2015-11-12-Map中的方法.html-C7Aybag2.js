import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,d as l}from"./app-J8acWEVP.js";const o="/assets/map-CaNMWzHS.png",i={},p=l('<p>整理了下Java中Map的结构画了个图, 虚线表示接口, 实线表示类</p><h2 id="map继承关系图" tabindex="-1"><a class="header-anchor" href="#map继承关系图"><span>Map继承关系图</span></a></h2><figure><img src="'+o+'" alt="Map继承关系图" tabindex="0" loading="lazy"><figcaption>Map继承关系图</figcaption></figure><h2 id="map基本操作" tabindex="-1"><a class="header-anchor" href="#map基本操作"><span>Map基本操作</span></a></h2><ul><li><code>int size()</code>: 返回map大小</li><li><code>boolean isEmpty()</code>: 是否为空Map</li><li><code>boolean containsKey(Object key)</code>: 是否包含key</li><li><code>boolean containsValue(Object value)</code>: 是否包含value</li><li><code>V get(Object key)</code>: 返回key对应的value, 没有则返回<code>null</code></li><li><code>V put(K key, V value)</code>: key和value都可为null, key重复则替换旧的value</li><li><code>void putAll(Map&lt;? extends K, ? extends V&gt; m)</code>:</li><li><code>V remove(Object key)</code>: 移除并返回, 若不包含key返回null</li><li><code>void clear()</code>: 清空map</li><li><code>Set&lt;K&gt; keySet()</code>: 返回key的集合</li><li><code>Collection&lt;V&gt; values()</code>: 返回value的集合</li><li><code>Set&lt;Map.Entry&lt;K, V&gt;&gt; entrySet()</code>: 返回Entry集合</li></ul><h2 id="hashmap与hashtable" tabindex="-1"><a class="header-anchor" href="#hashmap与hashtable"><span>HashMap与HashTable</span></a></h2><ul><li>Hashtable是线程安全的，而HashMap不是线程安全的</li><li>Hashtable不允许null作为key和value，而HashMap则可以使用null作为key和value</li><li>Hashtable很古老, 从JDK1.0就有了, 不建议使用</li></ul><h2 id="hashmap与identityhashmap" tabindex="-1"><a class="header-anchor" href="#hashmap与identityhashmap"><span>HashMap与IdentityHashMap</span></a></h2><ul><li><code>IdentityHashMap</code>认为两个key相等: 两个key严格相等(<code>key1 == key2</code>)</li><li><code>HashMap</code>则认为两个key相等: <code>key1.equals(key2)</code>且<code>hashCode</code>相同</li></ul><h2 id="linkedhashmap" tabindex="-1"><a class="header-anchor" href="#linkedhashmap"><span>LinkedHashMap</span></a></h2><p><code>LinkedHashMap</code>可以记住key-value对的添加时的顺序</p><h2 id="sortedmap接口和treemap" tabindex="-1"><a class="header-anchor" href="#sortedmap接口和treemap"><span>SortedMap接口和TreeMap</span></a></h2><p>内置比较器(<code>Comparator</code>),可比较前后顺序, <code>TreeMap</code>默认按照自然顺序排序, 不允许null作为key</p><h2 id="enummap" tabindex="-1"><a class="header-anchor" href="#enummap"><span>EnumMap</span></a></h2><p><code>EnumMap</code>只接受枚举类作为key, 不允许null作为key</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><p><code>Properties</code>继承<code>HashTable</code>, 还有几个其他常用方法:</p><ul><li><code>String getProperty(String key)</code>: 获取指定key对应的value值</li><li><code>String getProperty(String key, String defaultValue)</code>: 有默认值</li><li><code>Object setProperty(String key, String value)</code>: 调用<code>Hashtable</code>的put方法.</li><li><code>void load(InputStream inStream)</code>: 从属性文件加载key-value对</li><li><code>void store(OutputStream out, String comments)</code>: 将当前的所有key-value对输出到指定属性文件,小心乱码</li><li><code>loadFromXML(InputStream in)</code>: 从XML中加载配置</li><li><code>storeToXML(OutputStream os, String comment)</code>: 写到XML文件中</li><li><code>storeToXML(OutputStream os, String comment, String encoding)</code>: 写到XML中, 可以指定编码</li></ul><h2 id="map的选择" tabindex="-1"><a class="header-anchor" href="#map的选择"><span>Map的选择</span></a></h2><ul><li>若要保留插入时的顺序, 可用<code>LinkedHashMap</code></li><li>若要求key完全匹配(同一对象)，可用<code>IdentityHashMap</code></li><li>若要排序,可用<code>TreeMap</code>, 它在底层采用红黑树来管理key-value对</li></ul><h2 id="关于null" tabindex="-1"><a class="header-anchor" href="#关于null"><span>关于null</span></a></h2><ul><li><code>Hashtable</code>的key、value均不能为null</li><li><code>TreeMap</code>与<code>EnumMap</code>不允许key为null</li><li><code>HashMap</code>、<code>IdentityHashMap</code>key可以为null, 但不建议这样做</li></ul>',22),n=[p];function d(c,s){return a(),t("div",null,n)}const m=e(i,[["render",d],["__file","2015-11-12-Map中的方法.html.vue"]]),u=JSON.parse('{"path":"/program/java/2015-11-12-Map%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95.html","title":"Map中的方法","lang":"zh-CN","frontmatter":{"title":"Map中的方法","date":"2015-11-12T00:00:00.000Z","category":"Java","tag":["Java"],"order":-20151112,"description":"整理了下Java中Map的结构画了个图, 虚线表示接口, 实线表示类 Map继承关系图 Map继承关系图Map继承关系图 Map基本操作 int size(): 返回map大小 boolean isEmpty(): 是否为空Map boolean containsKey(Object key): 是否包含key boolean containsValu...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/program/java/2015-11-12-Map%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"魔芋丝丝"}],["meta",{"property":"og:title","content":"Map中的方法"}],["meta",{"property":"og:description","content":"整理了下Java中Map的结构画了个图, 虚线表示接口, 实线表示类 Map继承关系图 Map继承关系图Map继承关系图 Map基本操作 int size(): 返回map大小 boolean isEmpty(): 是否为空Map boolean containsKey(Object key): 是否包含key boolean containsValu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-09T09:40:25.000Z"}],["meta",{"property":"article:author","content":"moyusisi"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2015-11-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-09T09:40:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Map中的方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2015-11-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-09T09:40:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"moyusisi\\"}]}"]]},"headers":[{"level":2,"title":"Map继承关系图","slug":"map继承关系图","link":"#map继承关系图","children":[]},{"level":2,"title":"Map基本操作","slug":"map基本操作","link":"#map基本操作","children":[]},{"level":2,"title":"HashMap与HashTable","slug":"hashmap与hashtable","link":"#hashmap与hashtable","children":[]},{"level":2,"title":"HashMap与IdentityHashMap","slug":"hashmap与identityhashmap","link":"#hashmap与identityhashmap","children":[]},{"level":2,"title":"LinkedHashMap","slug":"linkedhashmap","link":"#linkedhashmap","children":[]},{"level":2,"title":"SortedMap接口和TreeMap","slug":"sortedmap接口和treemap","link":"#sortedmap接口和treemap","children":[]},{"level":2,"title":"EnumMap","slug":"enummap","link":"#enummap","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":2,"title":"Map的选择","slug":"map的选择","link":"#map的选择","children":[]},{"level":2,"title":"关于null","slug":"关于null","link":"#关于null","children":[]}],"git":{"createdTime":1719155638000,"updatedTime":1725874825000,"contributors":[{"name":"moyusisi","email":"moyusisi@126.com","commits":1}]},"filePathRelative":"program/java/2015-11-12-Map中的方法.md","localizedDate":"2015年11月12日","excerpt":"","autoDesc":true}');export{m as comp,u as data};
