import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,d as o}from"./app-ZaGLpo4p.js";const r={},s=o(`<p><code>CharMatcher</code>是字符匹配器, 代表着某一类字符, <code>CharMatcher</code>实现了<code>Predicate&lt;Character&gt;</code>接口<br><code>CharMatcher</code>提供了一系列方法，让你对字符作特定类型的操作：修剪[trim]、折叠[collapse]、移除[remove]、保留[retain]等<br><code>CharMatcher</code>只处理<code>char</code>类型代表的字符即<code>0x0000</code>~<code>0xFFFF</code></p><h2 id="获取charmatcher" tabindex="-1"><a class="header-anchor" href="#获取charmatcher"><span>获取CharMatcher</span></a></h2><p>CharMatcher中的常量可以满足大多数字符匹配需求</p><table><thead><tr><th>内置CharMatcher</th><th>说明</th></tr></thead><tbody><tr><td>ANY</td><td>任何字符都匹配</td></tr><tr><td>NONE</td><td>不匹配任何字符</td></tr><tr><td>WHITESPACE</td><td>空白字符(Unicode标准)</td></tr><tr><td>BREAKING_WHITESPACE</td><td>被空白隔开的两个词之间的那个空白, 比如两个单词之间的空白间隔</td></tr><tr><td>INVISIBLE</td><td>不可见字符, 如LINE_SEPARATOR</td></tr><tr><td>DIGIT</td><td>Unicode数字,比JAVA_DIGIT范围大,如果要表示0～9请用<code>inRange(&#39;0&#39;, &#39;9&#39;)</code></td></tr><tr><td>JAVA_LETTER</td><td></td></tr><tr><td>JAVA_DIGIT</td><td>Java定义的数字,范围超过0~9,如果要表示0～9请用<code>inRange(&#39;0&#39;, &#39;9&#39;)</code></td></tr><tr><td>JAVA_LETTER_OR_DIGIT</td><td>JAVA_LETTER 或 JAVA_DIGIT</td></tr><tr><td>JAVA_UPPER_CASE</td><td>范围比a~z大</td></tr><tr><td>JAVA_LOWER_CASE</td><td></td></tr><tr><td>JAVA_ISO_CONTROL</td><td></td></tr><tr><td>ASCII</td><td>ASCII码,这意味着它的代码点低于128</td></tr><tr><td>SINGLE_WIDTH</td><td></td></tr><tr><td>ZEROES</td><td></td></tr><tr><td>NINES</td><td></td></tr></tbody></table><p>获取字符匹配器的常见方法</p><ul><li><code>is(final char match)</code>: 给定单一字符匹配</li><li><code>isNot(final char match)</code>: 不是某字符</li><li><code>anyOf(final CharSequence sequence)</code>: 枚举匹配字符,如<code>CharMatcher.anyOf(“aeiou”)</code>匹配小写英语元音</li><li><code>noneOf(CharSequence sequence)</code>: 不是sequence里的任意一个,anyOf的相反方法, 等同于<code>anyOf(sequence).negate()</code></li><li><code>inRange(final char startInclusive, final char endInclusive)</code>: 给定字符范围匹配，如<code>CharMatcher.inRange(‘a’, ‘z’)</code></li><li><code>or(CharMatcher other)</code>: 取并集</li><li><code>and(CharMatcher other)</code>: 取交集</li><li><code>negate(CharMatcher other)</code>: 取反</li></ul><h2 id="使用字符匹配器" tabindex="-1"><a class="header-anchor" href="#使用字符匹配器"><span>使用字符匹配器</span></a></h2><p>返回是否匹配(<code>boolean</code>)的方法:</p><ul><li><code>boolean matchesAnyOf(CharSequence sequence)</code> : 是否sequence中有匹配的字符</li><li><code>boolean matchesAllOf(CharSequence sequence)</code> : 是否sequence中的所有字符都匹配</li><li><code>boolean matchesNoneOf(CharSequence sequence)</code> : sequence中不包含能够匹配的字符</li></ul><p>返回<code>int</code>的方法:</p><ul><li><code>int indexIn(CharSequence sequence)</code> : 返回第一次匹配上的下标, -1表示没有匹配的</li><li><code>int indexIn(CharSequence sequence, int start)</code> : &gt;=start或-1</li><li><code>int lastIndexIn(CharSequence sequence)</code> : 最后一次匹配的下标, -1表示没有匹配的</li></ul><p>返回匹配的内容(<code>String</code>)的方法:</p><ul><li><code>String removeFrom(CharSequence sequence)</code> : 移除匹配字符,返回的是移除匹配字符之后剩下的</li><li><code>String retainFrom(CharSequence sequence)</code> : 保留匹配字符</li><li><code>String replaceFrom(CharSequence sequence, char replacement)</code> : 替代匹配字符</li><li><code>String replaceFrom(CharSequence sequence, CharSequence replacement)</code> :替代匹配字符</li><li><code>String trimFrom(CharSequence sequence)</code> : 移除前导和尾部的匹配字符</li><li><code>String trimLeadingFrom(CharSequence sequence)</code>: 只移除前导匹配的</li><li><code>String trimTrailingFrom(CharSequence sequence)</code>: 只移除尾部匹配的</li><li><code>String collapseFrom(CharSequence sequence, char replacement)</code>: 替换,但连续的匹配字符只替换一次</li><li><code>String trimAndCollapseFrom(CharSequence sequence, char replacement)</code>: 中间连续的只替换一次,开头和结尾的直接去掉</li></ul><p>示例:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">is</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">removeFrom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bazaar&quot;</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">// &quot;bzr&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">is</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">retainFrom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bazaar&quot;</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">// &quot;aaa&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">is</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">replaceFrom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;radar&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;o&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;rodor&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">is</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">replaceFrom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;yaha&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;oo&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;yoohoo&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">anyOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ab&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">trimFrom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;abacatbab&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;cat&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">inRange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\0</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">trimFrom</span><span style="color:#E1E4E8;">(str); </span><span style="color:#6A737D;">// 等同于 str.trim()</span></span>
<span class="line"><span style="color:#E1E4E8;">CharMatcher.</span><span style="color:#B392F0;">anyOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;eko&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">collapseFrom</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;bookkeeper&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;-&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &quot;b-p-r&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),n=[s];function c(l,p){return t(),a("div",null,n)}const h=e(r,[["render",c],["__file","2015-11-21-Guava之CharMatcher.html.vue"]]),E=JSON.parse('{"path":"/program/backend/2015-11-21-Guava%E4%B9%8BCharMatcher.html","title":"Guava之CharMatcher","lang":"zh-CN","frontmatter":{"title":"Guava之CharMatcher","date":"2015-11-21T00:00:00.000Z","category":"Java","tag":["Guava"],"order":-20151121,"description":"CharMatcher是字符匹配器, 代表着某一类字符, CharMatcher实现了Predicate<Character>接口 CharMatcher提供了一系列方法，让你对字符作特定类型的操作：修剪[trim]、折叠[collapse]、移除[remove]、保留[retain]等 CharMatcher只处理char类型代表的字符即0x0000...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/program/backend/2015-11-21-Guava%E4%B9%8BCharMatcher.html"}],["meta",{"property":"og:site_name","content":"魔芋丝丝"}],["meta",{"property":"og:title","content":"Guava之CharMatcher"}],["meta",{"property":"og:description","content":"CharMatcher是字符匹配器, 代表着某一类字符, CharMatcher实现了Predicate<Character>接口 CharMatcher提供了一系列方法，让你对字符作特定类型的操作：修剪[trim]、折叠[collapse]、移除[remove]、保留[retain]等 CharMatcher只处理char类型代表的字符即0x0000..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-23T15:13:58.000Z"}],["meta",{"property":"article:author","content":"moyusisi"}],["meta",{"property":"article:tag","content":"Guava"}],["meta",{"property":"article:published_time","content":"2015-11-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-23T15:13:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Guava之CharMatcher\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2015-11-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-23T15:13:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"moyusisi\\"}]}"]]},"headers":[{"level":2,"title":"获取CharMatcher","slug":"获取charmatcher","link":"#获取charmatcher","children":[]},{"level":2,"title":"使用字符匹配器","slug":"使用字符匹配器","link":"#使用字符匹配器","children":[]}],"git":{"createdTime":1719155638000,"updatedTime":1719155638000,"contributors":[{"name":"moyusisi","email":"moyusisi@126.com","commits":1}]},"filePathRelative":"program/backend/2015-11-21-Guava之CharMatcher.md","localizedDate":"2015年11月21日","excerpt":"","autoDesc":true}');export{h as comp,E as data};
