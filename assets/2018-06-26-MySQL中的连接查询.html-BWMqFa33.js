import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as l,d as n}from"./app-Biz7QJq3.js";const a={},o=n(`<h2 id="条件连接" tabindex="-1"><a class="header-anchor" href="#条件连接"><span>条件连接</span></a></h2><p>或叫<code>逗号连接</code>, 在多个表的笛卡尔积中选取满足条件的行的连接, 如<code>select * from A,B where A.a &gt; A.b</code></p><h2 id="等值连接" tabindex="-1"><a class="header-anchor" href="#等值连接"><span>等值连接</span></a></h2><p>特殊的条件连接, 当条件为<code>某字段=某字段</code>时, 即为等值连接。如<code>select * from A,B where A.a=B.b</code></p><h2 id="自然连接" tabindex="-1"><a class="header-anchor" href="#自然连接"><span>自然连接</span></a></h2><p>对两张表中<code>字段名和数据类型都相同</code>的字段进行等值连接, 再将表中重复的字段去掉, 即为<code>自然连接</code>。</p><ul><li>写法 : <code>NATURAL JOIN</code></li><li>条件 : <code>列名相同</code>且<code>类型相同</code></li><li>不允许带<code>on/using</code></li></ul><p>示例:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#6A737D;">-- A中有a,b,c字段, B中有c,d字段</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">natural join</span><span style="color:#E1E4E8;"> B;</span></span>
<span class="line"><span style="color:#6A737D;">-- 结果等同于下面</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">d</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A,B </span><span style="color:#F97583;">where</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内连接" tabindex="-1"><a class="header-anchor" href="#内连接"><span>内连接</span></a></h2><p>使用比较运算符(<code>&lt;&gt;=</code>)根据每个表共有的列值匹配两个表中的行</p><ul><li>写法: <code>(INNER) JOIN</code></li><li>可以不写<code>on/using</code></li></ul><p>示例:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#6A737D;">-- 等值</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- 非等值</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;"> &gt;</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- 带条件</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">c</span><span style="color:#F97583;"> where</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;"> &gt;</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">d</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- using</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> (c);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-与-on" tabindex="-1"><a class="header-anchor" href="#using-与-on"><span><code>using</code> 与 <code>on</code></span></a></h3><p><code>using</code>与<code>on</code>都可以达到等值连接的效果, 但二者直接也有差别</p><ul><li><code>on</code>可以设置条件, 而<code>using</code>不可设置条件,只能指明使用哪些字段进行等值连接</li><li><code>on</code>不会去掉重复列, 而<code>using</code>会去掉重列(去重效果与自然连接的效果一样)</li></ul><h3 id="内连接与自然连接" tabindex="-1"><a class="header-anchor" href="#内连接与自然连接"><span>内连接与自然连接</span></a></h3><ul><li><code>自然连接</code>只能是同名属性的等值连接, 而<code>内连接</code>可以使用<code>on</code>子句来指定连接条件</li><li><code>自然连接</code>的结果会去掉重复列, 而<code>内连接</code>使用<code>on</code>子句进行等值连接时, 重复列不会被去掉</li><li>当<code>内连接</code>使用<code>using</code>子句时, 若指定所有同名同类型属性, 则与<code>自然连接</code>的结果一样</li></ul><h2 id="外连接" tabindex="-1"><a class="header-anchor" href="#外连接"><span>外连接</span></a></h2><p>外连接包括左连接、右连接、全连接</p><ul><li>所有外连接必须使用<code>on/using</code>子句提供相应的连接条件</li></ul><h3 id="左连接" tabindex="-1"><a class="header-anchor" href="#左连接"><span>左连接</span></a></h3><p>左表的所有行, 右表的匹配行。如果左表的某行在右表中没有匹配行, 则在结果集中右表的所有列均为空值</p><ul><li>写法 : <code>LEFT [OUTER] JOIN</code></li></ul><p>示例:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#6A737D;">-- on</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">left join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- using</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">left outer join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> (a, b);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="右连接" tabindex="-1"><a class="header-anchor" href="#右连接"><span>右连接</span></a></h3><p>右表的所有行, 左表的匹配行。如果右表的某行在左表中没有匹配行, 则在结果集中左表的所有列均为空值</p><ul><li>写法 : <code>RIGHT [OUTER] JOIN</code></li></ul><h3 id="全连接" tabindex="-1"><a class="header-anchor" href="#全连接"><span>全连接</span></a></h3><p>左表和右表中的所有行, 当某行在另一个表中没有匹配行时, 显示为空值</p><ul><li>写法 : <code>FULL [OUTER] JOIN</code></li><li><code>MySQL</code>不支持全连接, 可以采用<code>左外 + union + 右外</code>达到等效目的</li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#6A737D;">-- 使用 左外 + union + 右外 达到 full join 的效果</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">left outer join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">union</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">right outer join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">id</span><span style="color:#E1E4E8;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="union与union-all" tabindex="-1"><a class="header-anchor" href="#union与union-all"><span><code>union</code>与<code>union all</code></span></a></h4><ul><li><code>UNION</code>操作符用于合并两个或多个<code>SELECT</code>语句的结果集</li><li><code>UNION</code>内部的<code>SELECT</code>语句必须拥有相同数量的列, 列也必须拥有相似的数据类型</li><li><code>UNION</code>会去掉重复的值, <code>UNION ALL</code>会保留重复的值</li></ul><h2 id="交叉连接" tabindex="-1"><a class="header-anchor" href="#交叉连接"><span>交叉连接</span></a></h2><p>交叉联接返回左表中的所有行，左表中的每一行与右表中的所有行组合。交叉联接也称作笛卡尔积</p><ul><li>写法 : <code>CROSS JOIN</code></li><li>可以不写<code>on/using</code>, 不写是时等同于笛卡尔积</li></ul><p>示例:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#6A737D;">-- 笛卡尔积</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">cross join</span><span style="color:#E1E4E8;"> B;</span></span>
<span class="line"><span style="color:#6A737D;">-- on</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#F97583;"> *</span><span style="color:#F97583;"> from</span><span style="color:#E1E4E8;"> A </span><span style="color:#F97583;">cross join</span><span style="color:#E1E4E8;"> B </span><span style="color:#F97583;">on</span><span style="color:#79B8FF;"> A</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">a</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> B</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),p=[o];function c(t,r){return e(),l("div",null,p)}const y=s(a,[["render",c],["__file","2018-06-26-MySQL中的连接查询.html.vue"]]),E=JSON.parse('{"path":"/program/ops/db/2018-06-26-MySQL%E4%B8%AD%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2.html","title":"MySQL中的连接查询","lang":"zh-CN","frontmatter":{"title":"MySQL中的连接查询","date":"2018-06-26T00:00:00.000Z","category":"MySQL","tag":["MySQL"],"order":-20180626,"description":"条件连接 或叫逗号连接, 在多个表的笛卡尔积中选取满足条件的行的连接, 如select * from A,B where A.a > A.b 等值连接 特殊的条件连接, 当条件为某字段=某字段时, 即为等值连接。如select * from A,B where A.a=B.b 自然连接 对两张表中字段名和数据类型都相同的字段进行等值连接, 再将表中重复...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/program/ops/db/2018-06-26-MySQL%E4%B8%AD%E7%9A%84%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2.html"}],["meta",{"property":"og:site_name","content":"魔芋丝丝"}],["meta",{"property":"og:title","content":"MySQL中的连接查询"}],["meta",{"property":"og:description","content":"条件连接 或叫逗号连接, 在多个表的笛卡尔积中选取满足条件的行的连接, 如select * from A,B where A.a > A.b 等值连接 特殊的条件连接, 当条件为某字段=某字段时, 即为等值连接。如select * from A,B where A.a=B.b 自然连接 对两张表中字段名和数据类型都相同的字段进行等值连接, 再将表中重复..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-24T00:43:34.000Z"}],["meta",{"property":"article:author","content":"moyusisi"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2018-06-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-24T00:43:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL中的连接查询\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-06-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-24T00:43:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"moyusisi\\"}]}"]]},"headers":[{"level":2,"title":"条件连接","slug":"条件连接","link":"#条件连接","children":[]},{"level":2,"title":"等值连接","slug":"等值连接","link":"#等值连接","children":[]},{"level":2,"title":"自然连接","slug":"自然连接","link":"#自然连接","children":[]},{"level":2,"title":"内连接","slug":"内连接","link":"#内连接","children":[{"level":3,"title":"using 与 on","slug":"using-与-on","link":"#using-与-on","children":[]},{"level":3,"title":"内连接与自然连接","slug":"内连接与自然连接","link":"#内连接与自然连接","children":[]}]},{"level":2,"title":"外连接","slug":"外连接","link":"#外连接","children":[{"level":3,"title":"左连接","slug":"左连接","link":"#左连接","children":[]},{"level":3,"title":"右连接","slug":"右连接","link":"#右连接","children":[]},{"level":3,"title":"全连接","slug":"全连接","link":"#全连接","children":[]}]},{"level":2,"title":"交叉连接","slug":"交叉连接","link":"#交叉连接","children":[]}],"git":{"createdTime":1719160919000,"updatedTime":1719189814000,"contributors":[{"name":"moyusisi","email":"moyusisi@126.com","commits":1}]},"filePathRelative":"program/ops/db/2018-06-26-MySQL中的连接查询.md","localizedDate":"2018年6月26日","excerpt":"","autoDesc":true}');export{y as comp,E as data};
