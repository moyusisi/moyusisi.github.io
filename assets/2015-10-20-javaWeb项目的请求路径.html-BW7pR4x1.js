import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as t,d as a}from"./app-CpRHff6n.js";const n={},o=a(`<p><code>HttpServletRequest</code>中方法<code>getRequestURI</code>和<code>getRequestURI</code>的区别</p><p>项目在tomcat中的目录结构是这样子的: <code>webapps/testApp/项目内容</code><br><code>webapps</code>为tomcat容器的目录<br><code>testApp</code>即为项目部署的名称<br> 项目的代码片段是这样子的:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RestController</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RequestMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/testController&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#F97583;"> class</span><span style="color:#B392F0;"> TestController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">RequestMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/testAPI.htm&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">    public</span><span style="color:#E1E4E8;"> ModelAndView </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(HttpServletRequest </span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">, HttpServletResponse </span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt; map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Maps.</span><span style="color:#B392F0;">newHashMap</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;getContextPath&quot;</span><span style="color:#E1E4E8;">, request.</span><span style="color:#B392F0;">getContextPath</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;getServletPath&quot;</span><span style="color:#E1E4E8;">, request.</span><span style="color:#B392F0;">getServletPath</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;getRequestURL&quot;</span><span style="color:#E1E4E8;">, request.</span><span style="color:#B392F0;">getRequestURL</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;getRequestURI&quot;</span><span style="color:#E1E4E8;">, request.</span><span style="color:#B392F0;">getRequestURI</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        map.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;getQueryString&quot;</span><span style="color:#E1E4E8;">, request.</span><span style="color:#B392F0;">getQueryString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">        return</span><span style="color:#F97583;"> new</span><span style="color:#B392F0;"> ModelAndView</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> MappingJackson2JsonView</span><span style="color:#E1E4E8;">(), map);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请求的URL为: <code>http://localhost:8080/testApp/testController/testAPI.htm?a=1&amp;b=2</code><br> 得到的结果是:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#24292e;color:#e1e4e8;"><pre class="shiki github-dark vp-code"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;getContextPath&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/testApp&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;getServletPath&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/testController/testAPI.htm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;getRequestURL&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;http://localhost:8080/testApp/testController/testAPI.htm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;getRequestURI&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/testApp/testController/testAPI.htm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#79B8FF;">    &quot;getQueryString&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;a=1&amp;b=2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>变量名称</th><th>变量值</th></tr></thead><tbody><tr><td>ContextPath</td><td>项目部署路径，没有名称(如直接部署在在ROOT里)则为空串</td></tr><tr><td>ServletPath</td><td>请求地址(不包括项目名称)</td></tr><tr><td>RequestURL</td><td>整个URL(不包括查询参数)</td></tr><tr><td>RequestURI</td><td>请求地址(包括项目名称)</td></tr><tr><td>QueryString</td><td>?后面的那一堆查询串</td></tr></tbody></table>`,6),l=[o];function p(r,c){return t(),e("div",null,l)}const d=s(n,[["render",p],["__file","2015-10-20-javaWeb项目的请求路径.html.vue"]]),u=JSON.parse('{"path":"/program/backend/2015-10-20-javaWeb%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84.html","title":"HttpServletRequest的请求路径","lang":"zh-CN","frontmatter":{"title":"HttpServletRequest的请求路径","date":"2015-10-20T00:00:00.000Z","category":"Spring","tag":["Spring"],"order":-20151020,"description":"HttpServletRequest中方法getRequestURI和getRequestURI的区别 项目在tomcat中的目录结构是这样子的: webapps/testApp/项目内容 webapps为tomcat容器的目录 testApp即为项目部署的名称 项目的代码片段是这样子的: 请求的URL为: http://localhost:8080/...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/program/backend/2015-10-20-javaWeb%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84.html"}],["meta",{"property":"og:site_name","content":"魔芋丝丝"}],["meta",{"property":"og:title","content":"HttpServletRequest的请求路径"}],["meta",{"property":"og:description","content":"HttpServletRequest中方法getRequestURI和getRequestURI的区别 项目在tomcat中的目录结构是这样子的: webapps/testApp/项目内容 webapps为tomcat容器的目录 testApp即为项目部署的名称 项目的代码片段是这样子的: 请求的URL为: http://localhost:8080/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-23T14:41:23.000Z"}],["meta",{"property":"article:author","content":"moyusisi"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2015-10-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-23T14:41:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HttpServletRequest的请求路径\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2015-10-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-23T14:41:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"moyusisi\\"}]}"]]},"headers":[],"git":{"createdTime":1719153683000,"updatedTime":1719153683000,"contributors":[{"name":"moyusisi","email":"moyusisi@126.com","commits":1}]},"filePathRelative":"program/backend/2015-10-20-javaWeb项目的请求路径.md","localizedDate":"2015年10月20日","excerpt":"","autoDesc":true}');export{d as comp,u as data};
